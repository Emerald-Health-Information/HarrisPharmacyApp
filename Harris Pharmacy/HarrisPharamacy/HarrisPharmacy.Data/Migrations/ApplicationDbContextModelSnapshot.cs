// <auto-generated />
using System;
using HarrisPharmacy.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HarrisPharmacy.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Appointments.Appointment", b =>
                {
                    b.Property<string>("AppointmentId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppointmentState")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurationInSeconds")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppointmentId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Forms.Form", b =>
                {
                    b.Property<string>("FormId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatorId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Forms.FormField", b =>
                {
                    b.Property<string>("FormFieldId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormInputType")
                        .HasColumnType("int");

                    b.Property<bool>("UseValues")
                        .HasColumnType("bit");

                    b.Property<string>("Values")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormFieldId");

                    b.ToTable("FormFields");
                });

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Forms.FormFieldSubmission", b =>
                {
                    b.Property<string>("FormFieldSubmissionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FormFieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFieldValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormInputType")
                        .HasColumnType("int");

                    b.Property<string>("FormSubmissionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FormFieldSubmissionId");

                    b.HasIndex("FormSubmissionId");

                    b.ToTable("FormFieldSubmissions");
                });

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Forms.FormSubmission", b =>
                {
                    b.Property<string>("FormSubmissionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormSubmissionId");

                    b.ToTable("FormSubmissions");
                });

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Forms.FormWithFields", b =>
                {
                    b.Property<string>("FormWithFieldsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormFieldId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FormId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FormWithFieldsId");

                    b.HasIndex("FormFieldId");

                    b.HasIndex("FormId");

                    b.ToTable("FormWithFields");
                });

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Patients.Patient", b =>
                {
                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MentalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sex")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Patients.PatientList", b =>
                {
                    b.Property<string>("PatientListId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PatientId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientListId");

                    b.ToTable("PatientLists");
                });

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Forms.FormFieldSubmission", b =>
                {
                    b.HasOne("HarrisPharmacy.Data.Entities.Forms.FormSubmission", "FormSubmission")
                        .WithMany("FormFieldSubmissions")
                        .HasForeignKey("FormSubmissionId");
                });

            modelBuilder.Entity("HarrisPharmacy.Data.Entities.Forms.FormWithFields", b =>
                {
                    b.HasOne("HarrisPharmacy.Data.Entities.Forms.FormField", "FormField")
                        .WithMany("FormWithFields")
                        .HasForeignKey("FormFieldId");

                    b.HasOne("HarrisPharmacy.Data.Entities.Forms.Form", "Form")
                        .WithMany("FormWithFields")
                        .HasForeignKey("FormId");
                });
#pragma warning restore 612, 618
        }
    }
}
