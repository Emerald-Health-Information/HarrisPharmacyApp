@*
    Harrison1 COSC 470 2019

    File = AppointmentInformation.razor

    Author = Jackson Bates

    Date = 2019-11-19

    License = MIT

    Modification History

    Version        Author            Date                    Desc
    v 1.0        Jackson Bates        2019-11-19            Added Headers
    v 1.1        Taylor Adam          2019-11-27            Added the form component to this page
    v 1.2        Grayson King         2019-11-28            Added 'Back' button
    v 1.3        Jackson Bates        2019-12-2             Made finish appointment set flag rather than delete the appointment
    v 1.4        Taylor Adam          2019-12-2             Renamed
    v 1.5        George Cairney       2020-02-25            Added API adaption for PatientInfo
    -->
*@
@page "/AppointmentInformation/{patientListID}"
@using System.Net

@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Mvc.Rendering
@using HarrisPharmacy.App.Shared.Components
@using HarrisPharmacy.Data
@using HarrisPharmacy.Data.Entities.Appointments
@using HarrisPharmacy.Data.Entities.Patients;
@using HarrisPharmacy.Data.Interfaces
@using Microsoft.Data.SqlClient
@using System.Net.Http
@using Newtonsoft.Json
@inject ApplicationDbContext Context
@inject NavigationManager NavigationManager
@inject IAppointmentService AppointmentService
@inject IPatientInfoService PatientInfoService
@inject HttpClient Http
@inject ApplicationDbContext _applicationDbContext;

<div class="row">
    <div class="col">
        <p><b>Patient Name: </b> @FirstName @LastName</p>
        <p><b>Health Care Number: </b></p>
        <p><b>Sex: </b> @Sex</p>
        <p><b>Age: </b> @Age</p>
    </div>
</div>

<button class="btn btn-info" @onclick="@ToggleChatBot"> Use Chat Bot Instead? </button>
<br />

@if (!ChatBot)
{
    <FormPickerComponent PatientId="@Patient.PatientId" />
}
else
{
    <BotComponent />
}

<div class="row">
    <div class="col">
        <p><b>Appointment Notes</b></p>
        <textarea class="form-control" name="textarea" rows="3">Write notes here...</textarea>
    </div>
</div>

<div class="d-flex flex-row pt-2">
    <div class="col">
    </div>
    <div class="col pl-4 pr-0 d-flex justify-content-end">
        <button class="btn btn-info mr-2" type="button" @onclick="@Back">Back</button>
        <button class="btn btn-info" type="button" @onclick="@FinishAppointment">Finish</button>
    </div>
</div>

@code {
    [Parameter]
    public string patientListID { get; set; }
    private string FirstName;
    private string LastName;
    private string healthNumber;
    private string Age;
    private string Sex;
    private DateTime appointmentStartTime;
    Appointment appt;

    protected Patient Patient { get; set; } = new Patient();

    /// <summary>
    /// Determines if the user wants to use a chat bot or normal forms
    /// </summary>
    protected bool ChatBot { get; set; } = false;

    protected void ToggleChatBot()
    {
        ChatBot = !ChatBot;

    }

    protected override async Task OnInitializedAsync()
    {
        appt = await Http.GetJsonAsync<Appointment>("api/appointments/list/" + patientListID);
        Patient = await Http.GetJsonAsync<Patient>("api/patientinfo/patient/" + appt.PatientId);
        FirstName = Patient.FirstName;
        LastName = Patient.LastName;
        Age = Patient.Age;
        Sex = Patient.Sex;
        appointmentStartTime = DateTime.Now;
    }

    public async void FinishAppointment()
    {
        //await AppointmentService.SetAppointmentStateFinishedAsync(appt);
        appt.AppointmentState = "finished";
        appt.DurationInSeconds = (int)((DateTime.Now - appointmentStartTime).TotalSeconds);
        await Http.PutJsonAsync("api/appointments/{appt.AppointmentId}", appt);
        NavigationManager.NavigateTo("/");
    }

    public async void Back()
    {
        NavigationManager.NavigateTo("/");
    }
}