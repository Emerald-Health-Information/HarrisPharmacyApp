@page "/StartRegistration"
@using System.Net
@using Microsoft.AspNetCore.Mvc;
@using Rsk.AspNetCore.Fido;
@using Rsk.AspNetCore.Fido.Dtos;
@using HarrisPharmacy.App.Models
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components
@using Rsk.AspNetCore.Fido.Models
@using System.Text.Json;
@using System.Net.Http;
@using System;
@using System.Collections.Generic;
@using System.Linq;
@using System.Web;
@using System.Threading.Tasks;
@using HarrisPharmacy.App.Models;
@using System.Text.Json;
@using System.Text;
@inject IJSRuntime JsRuntime
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<h2>Register</h2>

<div class="form-group">
    <label asp-for="UserId"></label>
    <input @bind="@RegistrationModel.UserId" class="form-control" />
</div>
<div class="form-group">
    <label asp-for="DeviceName"></label>
    <input @bind="@RegistrationModel.DeviceName" class="form-control" />
</div>
<button @onclick="StartRegister" class="btn btn-primary">Submit</button>

@code {

    protected override async Task OnInitializedAsync()
    {
        RegistrationModel = new RegistrationModel();

    }

    RegistrationModel RegistrationModel { get; set; }

    public async Task StartRegister()
    {
        //    Task<string> t = CallAPI();
        //  String jsonStr = await t;
        //  Base64FidoRegistrationChallenge challenge = JsonSerializer.Deserialize<Base64FidoRegistrationChallenge>(jsonStr);
        Base64FidoRegistrationChallenge challenge = await httpClient.PostJsonAsync<Base64FidoRegistrationChallenge>("api/fido/register", RegistrationModel);
        var res = await JsRuntime.InvokeAsync<string>("fidoRegister", challenge);
        //NavigationManager.NavigateTo("/CompleteRegistration/" + challenge);
    }

    /*public async Task<string> CallAPI()
    {
        HttpResponseMessage response =
        return await response.Content.ReadAsStringAsync();

    }*/

    protected async Task fidoRegister(object[] args)
    {

    }
}