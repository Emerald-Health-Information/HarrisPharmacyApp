@*
    Harrison1 COSC 470 2019

    File = AppointmentInformation.razor

    Author = Grayson King

    Date = 2019-11-28

    License = MIT

    Modification History

    Version        Author            Date                    Desc
    v 1.0        Grayson King        2019-11-28            Added Headers
    v 1.1        Grayson King        2019-11-30            Refactor
    v 1.2        Jackson Bates       2019-12-2             Added flags to individual appointments
    -->
*@
@using System.Net

@using HarrisPharmacy.Data
@using HarrisPharmacy.Data.Entities.Appointments
@using HarrisPharmacy.Data.Entities.Patients
@using HarrisPharmacy.Data.Interfaces
@using System.Collections.Generic;
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Rendering
@using Microsoft.Data.SqlClient
@using Microsoft.AspNetCore.Components.Web;
@using System.Net.Http
@using System.Security.Claims;

@using Newtonsoft.Json
@inject HttpClient Http
@inject IAppointmentService AppointmentService
@inject ApplicationDbContext Context
@inject UserManager<IdentityUser> UserManager
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

@if (totalAppointments > 0)
{
    @foreach (var appointment in appointments)
    {

        <div class="row pr-4 mb-2">
            <div class="col-1 align-self-center text-center wider-mbl">
                <span>@appointment.StartTime.ToString("MMMM dd")</span>
            </div>
            <div class="col pr-2 pl-2">
                <button class="btn btn-info btn-block" @onclick="@(e => GoToPatient(appointment.AppointmentId))" style="height:60px;">
                    @{ AssignPatient(appointment.PatientId); }
                    @if (patient != null)
                    {
                    <span>
                        @appointment.StartTime.ToString("HH:mm") -
                        @appointment.Location -
                        @patient.LastName, @patient.FirstName[0]
                    </span>

                    }
                </button>
            </div>
            <div class="col-1 pl-0" style="height:60px;">
                <button @onclick="@(e => SkipAppointment(appointment.AppointmentId))" class="btn btn-danger" style="height:60px;">
                    <span class="oi oi-trash hover"></span>
                </button>
            </div>
        </div>
    }
}
else
{
    <p><i>There are no appointments for @Email.</i></p>
}

@code {

    [Parameter] public string UserId { get; set; }
    [Parameter] public string Email { get; set; }
    public static string email;
    public static List<Appointment> appointments { get; set; }
    public static List<Appointment> openAppointments { get; set; }
    public int totalAppointments = 0;
    public Patient patient;
}

@functions {
    protected override async Task OnInitializedAsync()
    {

        //appointments = await AppointmentService.GetOpenPatientListUserAsync(UserId);
        appointments = await Http.GetJsonAsync<List<Appointment>>("https://harris-api.azurewebsites.net/api/appointments/getOpenPatientListUser/" + UserId);
        //appointments.OrderBy(x => Convert.ToDateTime(x.StartTime));

        appointments.Sort((a, b) => a.StartTime.CompareTo(b.StartTime));
        if (appointments != null)
        {
            totalAppointments = appointments.Count();
        }
    }
    /// <summary>
    /// Assigns current patient
    /// </summary>
    /// <param name="index"></param>
    protected void AssignPatient(string patientId)
    {
        patient = Context.Patients.Where(p => p.PatientId == patientId).FirstOrDefault();
    }
    /// <summary>
    /// Goes to info page for the patient appointment
    /// </summary>
    /// <param name="pid"></param>
    protected void GoToPatient(string pid)
    {
        navigationManager.NavigateTo("AppointmentInformation/" + pid);
        StateHasChanged();
    }
    /// <summary>
    /// Deletes an appointment without having to access the info page
    /// </summary>
    /// <param name="pid"></param>
    protected async void SkipAppointment(string pid)
    {
        var appointment = await AppointmentService.GetAppointmentAsync(pid);
        //var appointment = await Http.GetJsonAsync<Appointment>("api/appointments/list/" + pid);
        //await AppointmentService.DeleteAsync(pid);
        appointment.AppointmentState = "skipped";
        await AppointmentService.UpdateAppointmentAsync(appointment);
        appointments = await Http.GetJsonAsync<List<Appointment>>("https://harris-api.azurewebsites.net/api/appointments/getOpenPatientListUser/" + UserId);
        totalAppointments = appointments.Count();
        //await Http.PutJsonAsync("api/appointments/{appointment.AppointmentId}", appointment);
        this.StateHasChanged();
        //navigationManager.NavigateTo("/");
    }
}